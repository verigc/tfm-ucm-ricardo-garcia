AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  TFM - Pipeline de datos serverless para la ingesta y procesamiento de datos públicos. Versión final que combina la estructura SAM con la configuración detallada de los recursos desplegados.

Parameters:
  S3BucketName:
    Type: String
    Description: Nombre del bucket S3 único donde se almacenarán los datos y scripts.
  SecretName:
    Type: String
    Default: tfm-ucm
    Description: Nombre del secreto en AWS Secrets Manager que contiene las API keys.

Resources:
  # ================================================================================= #
  #                                 Recursos de IAM                                   #
  # ================================================================================= #
  # Rol unificado para Lambdas y Step Functions para replicar la configuración actual.
  # NOTA: En un entorno productivo real, se recomienda crear roles separados con permisos mínimos para cada recurso.
  TfmUnifiedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - states.amazonaws.com
                - glue.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${S3BucketName}
                  - !Sub arn:aws:s3:::${S3BucketName}/*
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: SecretsManagerPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SecretName}-*
        - PolicyName: GlueCatalogAndTablePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - glue:BatchCreatePartition
                  - glue:GetTable
                Resource: '*' # Simplificado para el TFM, en producción se limitaría a ARNs específicos
        - PolicyName: EventBridgeSyncPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - events:PutRule
                  - events:PutTargets
                  - events:DeleteRule
                  - events:DescribeRule
                Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctions*

      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess # Mantenido para el job de Glue

  # ================================================================================= #
  #                             Funciones Lambda                                      #
  # ================================================================================= #
  GetHealthDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getHealthData
      CodeUri: lambda_functions/getHealthData/
      Handler: getHealthData.lambda_handler # Ajusta si tu archivo o función se llama diferente
      Runtime: python3.10
      MemorySize: 512
      Timeout: 60
      Role: !GetAtt TfmUnifiedRole.Arn
      Environment:
        Variables:
          bucket_name: !Sub s3://${S3BucketName}
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python310:25

  GetReeDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get_ree_data
      CodeUri: lambda_functions/get_ree_data/
      Handler: get_ree_data.lambda_handler
      Runtime: python3.10
      MemorySize: 256
      Timeout: 60
      Role: !GetAtt TfmUnifiedRole.Arn
      Environment:
        Variables:
          time_trunc: day
          uri_definition: /es/datos/demanda/evolucion
          fecha_ini: 2024-01-01T00:00
          fecha_fin: 2025-07-31T23:59
          bucket_name: !Ref S3BucketName
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python310:25

  GetOpenAqSensorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get_openaq_sensors
      CodeUri: lambda_functions/get_openaq_sensors/
      Handler: get_openaq_sensors.lambda_handler
      Runtime: python3.10
      MemorySize: 255
      Timeout: 60
      Role: !GetAtt TfmUnifiedRole.Arn
      Environment:
        Variables:
          country_code: ES
          bucket_name: !Sub s3://${S3BucketName}
          start_date: '2024-01-01T00:00:00Z'
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python310:25

  GetOpenAqDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get_open_aq_data
      CodeUri: lambda_functions/get_open_aq_data/
      Handler: get_open_aq_data.lambda_handler
      Runtime: python3.11
      MemorySize: 512
      Timeout: 120
      Role: !GetAtt TfmUnifiedRole.Arn
      Environment:
        Variables:
          country_code: ES
          bucket_name: !Sub s3://${S3BucketName}
          start_date: '2024-01-01T00:00:00Z'
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python311:22

  DividirSensoresEnLotesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DividirSensoresEnLotes
      CodeUri: lambda_functions/DividirSensoresEnLotes/
      Handler: DividirSensoresEnLotes.lambda_handler
      Runtime: python3.10
      MemorySize: 128
      Timeout: 3
      Role: !GetAtt TfmUnifiedRole.Arn

  # ================================================================================= #
  #                                 Job de AWS Glue                                   #
  # ================================================================================= #
  OpenAqEtlJob:
    Type: AWS::Glue::Job
    Properties:
      Name: OpenAQ_ETL
      Role: !GetAtt TfmUnifiedRole.Arn
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Sub s3://${S3BucketName}/glue_scripts/OpenAQ_ETL.py
      GlueVersion: '3.0'

  # ================================================================================= #
  #                             Recursos Adicionales                                  #
  # ================================================================================= #
  TfmUcmSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref SecretName
      Description: Secreto para almacenar API keys del TFM UCM.

  # ================================================================================= #
  #                             Máquinas de Estados                                   #
  # ================================================================================= #
  OpenAQStepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: OpenAQStepFunction
      DefinitionSubstitutions:
        LambdaGetOpenAqDataArn: !GetAtt GetOpenAqDataFunction.Arn
      Role: !GetAtt TfmUnifiedRole.Arn
      DefinitionUri: step_function_definition/maquinaTrabajadora.yaml # O .json, ajusta la extensión

  MainStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: ProcesarTodosLosSensores-Orchestrator
      DefinitionSubstitutions:
        LambdaGetHealthDataArn: !GetAtt GetHealthDataFunction.Arn
        LambdaGetReeDataArn: !GetAtt GetReeDataFunction.Arn
        LambdaGetOpenAqSensorsArn: !GetAtt GetOpenAqSensorsFunction.Arn
        LambdaDividirSensoresEnLotesArn: !GetAtt DividirSensoresEnLotesFunction.Arn
        StateMachineOpenAQA Arn: !Ref OpenAQStepFunction
        GlueJobName: !Ref OpenAqEtlJob
      Role: !GetAtt TfmUnifiedRole.Arn
      DefinitionUri: step_function_definition/maquinaOrquestadora.yaml # O .json, ajusta la extensión

  LambdaInvokePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: TfmLambdaInvokePolicy
      Roles:
        - !Ref TfmUnifiedRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt GetHealthDataFunction.Arn
              - !GetAtt GetReeDataFunction.Arn
              - !GetAtt GetOpenAqSensorsFunction.Arn
              - !GetAtt GetOpenAqDataFunction.Arn
              - !GetAtt DividirSensoresEnLotesFunction.Arn

Outputs:
  MainStateMachineArn:
    Description: ARN de la máquina de estados principal
    Value: !Ref MainStateMachine
  OpenAQStepFunctionArn:
    Description: ARN de la máquina de estados trabajadora
    Value: !Ref OpenAQStepFunction